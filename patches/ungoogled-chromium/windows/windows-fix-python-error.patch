--- a/build/util/python2_action.py
+++ b/build/util/python2_action.py
@@ -17,7 +17,7 @@ elif sys.executable.endswith('.exe'):
   # 8K commamand line length limit in cmd.exe, but we can use it to
   # find the underlying executable, which we can then safely call.
   exe = subprocess.check_output(
-      ['python.bat', '-c',
+      ['python2', '-c',
        'import sys; print(sys.executable)']).decode('utf8').strip()
 else:
   # If we get here, we are a Python3 executable. Hope that we can find
--- a/chrome/browser/resources/tools/optimize_webui.py
+++ b/chrome/browser/resources/tools/optimize_webui.py
@@ -179,7 +179,7 @@ def _bundle_v3(tmp_out_dir, in_path, out
          (len(generated_paths))
 
   for bundled_file in bundled_paths:
-    with open(bundled_file, 'r') as f:
+    with open(bundled_file, 'r', encoding='utf-8') as f:
       output = f.read()
       assert "<if expr" not in output, \
           'Unexpected <if expr> found in bundled output. Check that all ' + \
